service: stargate

provider:
  name: aws
  runtime: nodejs12.x
  stage: beta
  region: us-east-1
  logRetentionInDays: 14
  iam:
    role: arn:aws:iam::654918520080:role/API-LAMBDA-SES
  apiGateway:
    shouldStartNameWithService: true
    usagePlan:
      quota:
        limit: 500
        offset: 0
        period: MONTH
      throttle:
        burstLimit: 20
        rateLimit: 10
    resourcePolicy:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/GET/*
          - execute-api:/*/POST/*
          - execute-api:/*/OPTIONS/*
        Condition:
          IpAddress:
            aws:SourceIp: ${file(./deployment/cors.json):ipRange}
  environment:
    NODE_ENV: beta

package:
  exclude:
    - src/**
    - deployment/**
    - "**.*"

functions:
  health:
    handler: dist/health/index.handler
    description: Gateway health check. Responds with current time and a short message.
    events:
      - http:
          path: /health
          method: GET

  error:
    handler: dist/error/index.handler
    description: Used to trigger a 500 HTTP Response code for alarm testing
    events:
      - http:
          path: /error
          method: POST
          cors:
            enabled: true
            origins: ${file(./deployment/cors.json):allowedOrigins}
            headers: ${file(./deployment/cors.json):headers}

  bad-request:
    handler: dist/bad-request/index.handler
    description: Used to trigger a 400 HTTP Response code for alarm testing
    events:
      - http:
          path: /bad-request
          method: POST
          cors:
            enabled: true
            origins: ${file(./deployment/cors.json):allowedOrigins}
            headers: ${file(./deployment/cors.json):headers}

  email:
    handler: dist/email/index.handler
    description: Used to send email with Simple Email Service (SES)
    events:
      - http:
          path: /email
          method: POST
          cors:
            enabled: true
            origins: ${file(./deployment/cors.json):allowedOrigins}
            headers: ${file(./deployment/cors.json):headers}

  email-with-attachment:
    handler: dist/email-with-attachment/index.handler
    description: Used to send email containing attachment with NodeMailer and Simple Email Service (SES)
    events:
      - http:
          path: /email-with-attachment
          method: POST
          cors:
            enabled: true
            origins: ${file(./deployment/cors.json):allowedOrigins}
            headers: ${file(./deployment/cors.json):headers}

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: services.eandbsolutions.com
    basePath: "beta"
    stage: beta
    createRoute53Record: true
